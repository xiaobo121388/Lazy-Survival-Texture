{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:warden",
      "materials": {
        "default": "warden",
        "bioluminescent_layer": "warden_bioluminescent_layer",
				"hp": "entity_emissive_alpha"
      },
      "textures": {
        "default": "textures/entity/warden/warden",
        "bioluminescent_layer": "textures/entity/warden/warden_bioluminescent_layer",
        "spots_1": "textures/entity/warden/warden_pulsating_spots_1",
        "spots_2": "textures/entity/warden/warden_pulsating_spots_2",
        "tendrils": "textures/entity/warden/warden_tendrils",
        "heart": "textures/entity/warden/warden_heart",
				"hp100": "textures/hp/hp100",
        "hp99": "textures/hp/hp99",
        "hp98": "textures/hp/hp98",
        "hp97": "textures/hp/hp97",
        "hp96": "textures/hp/hp96",
        "hp95": "textures/hp/hp95",
        "hp94": "textures/hp/hp94",
        "hp93": "textures/hp/hp93",
        "hp92": "textures/hp/hp92",
        "hp91": "textures/hp/hp91",
        "hp90": "textures/hp/hp90",
        "hp89": "textures/hp/hp89",
        "hp88": "textures/hp/hp88",
        "hp87": "textures/hp/hp87",
        "hp86": "textures/hp/hp86",
        "hp85": "textures/hp/hp85",
        "hp84": "textures/hp/hp84",
        "hp83": "textures/hp/hp83",
        "hp82": "textures/hp/hp82",
        "hp81": "textures/hp/hp81",
        "hp80": "textures/hp/hp80",
        "hp79": "textures/hp/hp79",
        "hp78": "textures/hp/hp78",
        "hp77": "textures/hp/hp77",
        "hp76": "textures/hp/hp76",
        "hp75": "textures/hp/hp75",
        "hp74": "textures/hp/hp74",
        "hp73": "textures/hp/hp73",
        "hp72": "textures/hp/hp72",
        "hp71": "textures/hp/hp71",
        "hp70": "textures/hp/hp70",
        "hp69": "textures/hp/hp69",
        "hp68": "textures/hp/hp68",
        "hp67": "textures/hp/hp67",
        "hp66": "textures/hp/hp66",
        "hp65": "textures/hp/hp65",
        "hp64": "textures/hp/hp64",
        "hp63": "textures/hp/hp63",
        "hp62": "textures/hp/hp62",
        "hp61": "textures/hp/hp61",
        "hp60": "textures/hp/hp60",
        "hp59": "textures/hp/hp59",
        "hp58": "textures/hp/hp58",
        "hp57": "textures/hp/hp57",
        "hp56": "textures/hp/hp56",
        "hp55": "textures/hp/hp55",
        "hp54": "textures/hp/hp54",
        "hp53": "textures/hp/hp53",
        "hp52": "textures/hp/hp52",
        "hp51": "textures/hp/hp51",
        "hp50": "textures/hp/hp50",
        "hp49": "textures/hp/hp49",
        "hp48": "textures/hp/hp48",
        "hp47": "textures/hp/hp47",
        "hp46": "textures/hp/hp46",
        "hp45": "textures/hp/hp45",
        "hp44": "textures/hp/hp44",
        "hp43": "textures/hp/hp43",
        "hp42": "textures/hp/hp42",
        "hp41": "textures/hp/hp41",
        "hp40": "textures/hp/hp40",
        "hp39": "textures/hp/hp39",
        "hp38": "textures/hp/hp38",
        "hp37": "textures/hp/hp37",
        "hp36": "textures/hp/hp36",
        "hp35": "textures/hp/hp35",
        "hp34": "textures/hp/hp34",
        "hp33": "textures/hp/hp33",
        "hp32": "textures/hp/hp32",
        "hp31": "textures/hp/hp31",
        "hp30": "textures/hp/hp30",
        "hp29": "textures/hp/hp29",
        "hp28": "textures/hp/hp28",
        "hp27": "textures/hp/hp27",
        "hp26": "textures/hp/hp26",
        "hp25": "textures/hp/hp25",
        "hp24": "textures/hp/hp24",
        "hp23": "textures/hp/hp23",
        "hp22": "textures/hp/hp22",
        "hp21": "textures/hp/hp21",
        "hp20": "textures/hp/hp20",
        "hp19": "textures/hp/hp19",
        "hp18": "textures/hp/hp18",
        "hp17": "textures/hp/hp17",
        "hp16": "textures/hp/hp16",
        "hp15": "textures/hp/hp15",
        "hp14": "textures/hp/hp14",
        "hp13": "textures/hp/hp13",
        "hp12": "textures/hp/hp12",
        "hp11": "textures/hp/hp11",
        "hp10": "textures/hp/hp10",
        "hp9": "textures/hp/hp9",
        "hp8": "textures/hp/hp8",
        "hp7": "textures/hp/hp7",
        "hp6": "textures/hp/hp6",
        "hp5": "textures/hp/hp5",
        "hp4": "textures/hp/hp4",
        "hp3": "textures/hp/hp3",
        "hp2": "textures/hp/hp2",
        "hp1": "textures/hp/hp1",
        "hp0": "textures/hp/hp1"
      },
      "geometry": {
        "default": "geometry.warden",
				"hp": "geometry.health_bar"
      },
      "scripts": {
        "pre_animation": [
          "variable.animation_speed = Math.min(0.5, 3.0 * query.modified_move_speed);",
          "variable.anim_pos_mod = 49.388962;",
          "variable.bob = query.life_time * 20;",
          "variable.modified_bob = variable.bob * 0.1 * 57.2958;",
          "variable.modified_bob_sin = math.sin(variable.modified_bob);",
          "variable.modified_bob_cos = math.cos(variable.modified_bob);",
          "variable.pi = 180;",
          "variable.halfpi = variable.pi / 2.0;",
          "variable.tendril_animation_length = 0.5;",
          "variable.head_x_rot = (68.7549 * math.cos(query.modified_distance_moved * variable.anim_pos_mod + variable.halfpi) * math.min(0.35, variable.animation_speed)) + (math.sin(variable.bob * 5.72958) * 0.06);",
          "variable.head_z_rot = (17.1887 * math.sin(query.modified_distance_moved * variable.anim_pos_mod) * variable.animation_speed) + (Math.cos(variable.bob * 5.72958) * 0.06);",
          "variable.body_x_rot = (57.2958 * math.cos(query.modified_distance_moved * variable.anim_pos_mod) * math.min(0.35, variable.animation_speed)) + (math.cos(variable.bob * 5.72958) * 0.025);",
          "variable.body_z_rot = (5.72958 * math.sin(query.modified_distance_moved * variable.anim_pos_mod) * variable.animation_speed) + (math.sin(variable.bob * 5.72958) * 0.025);",
          "variable.left_leg_x_rot = 57.2958 * math.cos(query.modified_distance_moved * variable.anim_pos_mod) * variable.animation_speed;",
          "variable.right_leg_x_rot = 57.2958 * math.cos(query.modified_distance_moved * variable.anim_pos_mod + variable.pi) * variable.animation_speed;",
          "variable.left_arm_x_rot = -(45.8366 * math.cos(query.modified_distance_moved * variable.anim_pos_mod) * variable.animation_speed);",
          "variable.right_arm_x_rot = -(45.8366 * math.sin(query.modified_distance_moved * variable.anim_pos_mod) * variable.animation_speed);",
          "variable.vibration_phase = query.time_since_last_vibration_detection;",
          "variable.tendril_animation = variable.vibration_phase < 0.0 ? 0.0 : 1.0 - (math.min(query.time_since_last_vibration_detection, variable.tendril_animation_length) / variable.tendril_animation_length);",
          "variable.left_tendril_x_rot = variable.tendril_animation * (math.cos(variable.bob * 128.9155) * variable.pi * 0.1);",
          "variable.right_tendril_x_rot = variable.left_tendril_x_rot * -1;",
          "variable.spots_1_alpha = 0.25 * math.cos(variable.bob * 2.578);",
          "variable.spots_2_alpha = 0.25 * math.cos(variable.bob * 2.578 + 180.0);",
          "variable.tendrils_alpha = variable.tendril_animation;",
          "variable.heart_alpha = 0.8 * (1.0 - query.heartbeat_phase);",
					"variable.health = math.round(query.health / query.max_health * 100);"
        ],
        "animate": [
          "base_pose",
          { "move": "!(query.is_emerging || query.is_digging)" },
          "shiver_controller",
          "bob",
          { "emerge": "query.is_emerging" },
          "sniff_controller",
          { "dig": "query.is_digging" },
          "roar_controller",
          { "look_at_target": "!(query.is_emerging || query.is_digging)" },
          "melee_attack_controller",
          { "swimming": "query.swim_amount > 0.0" },
          "hurt_controller",
          "sonic_boom_controller",
					"hp"
        ],
				"initialize": [
					"variable.hp = query.health;"
				],
				"variables": {
          "variable.hp": "public"
        }
      },
      "animations": {
        "emerge": "animation.warden.emerge",
        "sniff": "animation.warden.sniff",
        "sniff_controller": "controller.animation.warden.sniff",
        "dig": "animation.warden.dig",
        "roar": "animation.warden.roar",
        "roar_controller": "controller.animation.warden.roar",
        "shiver": "animation.warden.shiver",
        "shiver_controller": "controller.animation.warden.shiver",
        "base_pose": "animation.humanoid.base_pose.v1.0",
        "look_at_target": "animation.warden.look_at_target.default",
        "move": "animation.warden.move",
        "melee_attack": "animation.warden.attack",
        "melee_attack_controller": "controller.animation.warden.melee_attacking",
        "bob": "animation.warden.bob",
        "swimming": "animation.humanoid.swimming.v1.0",
        "hurt": "animation.warden.hurt",
        "hurt_controller": "controller.animation.warden.hurt",
        "sonic_boom": "animation.warden.sonic_boom",
        "sonic_boom_controller": "controller.animation.warden.sonic_boom",
				"hp": "animation.health_warden"
      },
      "render_controllers": [
        "controller.render.warden",
        "controller.render.warden_bioluminescent_layer",
        "controller.render.warden_spots_1",
        "controller.render.warden_spots_2",
        "controller.render.warden_tendrils",
        "controller.render.warden_heart",
				"controller.render.hp"
       ],
      "enable_attachables": true,
      "spawn_egg": {
        "base_color": "#0F4649",
        "overlay_color": "#39D6E0"
      },
      "sound_effects": {
        "emerge": "mob.warden.emerge",
        "sniff": "mob.warden.sniff",
        "dig": "mob.warden.dig",
        "roar": "mob.warden.roar",
        "clicking": "mob.warden.clicking"
      },
      "particle_effects": {
        "digging": "minecraft:warden_dig"
      }
    }
  }
}
